# Pre-merge Checks (for Python projects)
# 1. Unit tests with code coverage (pytest)
# 2. Code quality analysis (flake8)
# 3. Dependency analysis (vulnerabilities)
# 4. Dependency analysis (undesirable licenses)
# 5. Deploy reports generated from the above to GitHub Pages

name: Pre-Merge Checks (test-engine-core)

on:
  # Runs when a pull request to main is being assigned
  pull_request:
    types: [ assigned, synchronize ]
    branches:
      - 'main'
    paths:
      - 'test-engine-core/**'

  # Run this workflow manually from Actions tab
  workflow_dispatch:

# Allow one concurrent deployment
concurrency:
  group: ${{ github.repository }}-${{ github.workflow }}
  cancel-in-progress: true

jobs:

  pre-merge-checks:
    # Run only when PR is assigned, even on subsequent commits (i.e. synchronize)
    if: (github.event_name == 'pull_request' && github.event.pull_request.assignee != null) || github.event_name == 'workflow_dispatch'

    runs-on: ubuntu-latest
    timeout-minutes: 40

    steps:
      # Install redis
      - name: Install redis
        run: |
          sudo apt update
          sudo apt install redis-server

      # Checkout code
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          sparse-checkout: |
            test-engine-core

      # Install dependencies
      - name: Setup pip cache/install
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip'
          cache-dependency-path: test-engine-core

      - name: Install dependencies
        working-directory: ${{ github.workspace }}/test-engine-core
        run: |
          pip install -r requirements.txt
          pip install pytest pytest-mock pytest-html pytest-json pytest-cov coverage anybadge
          pip install flake8 flake8-html

      # Unit Tests & Coverage
      - name: Unit tests with coverage
        if: ${{ ! cancelled() }}
        working-directory: ${{ github.workspace }}/test-engine-core
        timeout-minutes: 30
        run: |
          bash ci/run-test.sh

      # flake8
      - name: Code quality analysis - lint
        if: ${{ ! cancelled() }}
        working-directory: ${{ github.workspace }}/test-engine-core
        run: |
          bash ci/run-flake8.sh

      # pip-audit
      - name: Dependency analysis - vulnerabilities & licenses
        if: ${{ ! cancelled() }}
        working-directory: ${{ github.workspace }}/test-engine-core
        run: |
          bash ci/run-pip-audit.sh

      ### Publish reports to ci dashboard ###

      - name: Checkout dashboard
        if: ${{ github.event.pull_request.head.repo.full_name == github.repository && always() }}
        uses: actions/checkout@v3
        with:
          repository: aiverify-foundation/ci-dashboard
          token: ${{ secrets.CHECKOUT_TOKEN }}
          ref: main
          path: check-results

      - name: Push results to dashboard
        if: ${{ github.event.pull_request.head.repo.full_name == github.repository && always() }}
        working-directory: ${{ github.workspace }}/check-results
        run: |
          set +e
          find ../ -type f -name ".gitignore" -exec rm {} +
          [ -d "docs/pre-merge/core" ] && rm -rf docs/pre-merge/core
          mkdir -p docs/pre-merge/core
          mv ../test-engine-core/htmlcov docs/pre-merge/core/
          mv ../test-engine-core/flake8-report docs/pre-merge/core/
          mv ../test-engine-core/assets docs/pre-merge/core/         
          mv ../test-engine-core/*.svg docs/pre-merge/core/
          mv ../test-engine-core/*.html docs/pre-merge/core/
          mv ../test-engine-core/*.md docs/pre-merge/core/
          mv ../test-engine-core/*.txt docs/pre-merge/core/
          git add docs/pre-merge/core
          git config user.name "aiverify"
          git config user.email "aiverify@imda.gov.sg"
          git commit -m "feat(portal) actions publish test-engine-core reports to dashboard"
          git push
          set -e          

